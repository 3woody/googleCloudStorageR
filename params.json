{
  "name": "Googlecloudstorager",
  "tagline": "Google Cloud Storage API to R",
  "body": "# googleCloudStorageR\r\n\r\nR library for interacting with google cloud storage\r\n\r\n## Demo running it in Shiny\r\n\r\n```r\r\nlibrary(shiny)\r\nlibrary(googleAuthR)\r\nlibrary(googleCloudStorageR)\r\noptions(googleAuthR.scopes.selected = \"https://www.googleapis.com/auth/devstorage.full_control\")\r\n\r\n## you need to start Shiny app on port 1221\r\n## as thats what the default googleAuthR project expects for OAuth2 authentication\r\n\r\n## options(shiny.port = 1221)\r\n## print(source('shiny_test.R')$value) or push the \"Run App\" button in RStudio\r\n\r\nshinyApp(\r\n  ui = shinyUI(\r\n      fluidPage(\r\n        googleAuthR::loginOutput(\"login\"),\r\n        fileInput(\"picture\", \"picture\"),\r\n        textInput(\"filename\", label = \"Name on Google Cloud Storage\",value = \"myObject\"),\r\n        actionButton(\"submit\", \"submit\"),\r\n        textOutput(\"meta_file\")\r\n      )\r\n  ),\r\n  server = shinyServer(function(input, output, session){\r\n\r\n    access_token <- reactiveAccessToken(session)\r\n\r\n    output$login <- googleAuthR::renderLogin(session, access_token())\r\n\r\n    meta <- eventReactive(input$submit, {\r\n\r\n      message(\"Uploading to Google Cloud Storage\")\r\n      with_shiny(gcs_upload,  # from googleCloudStorageR\r\n                 file = input$picture$datapath,\r\n                 bucket = \"gogauth-test\",  # enter your bucket name here\r\n                 type = input$picture$type,\r\n                 name = input$filename,\r\n                 shiny_access_token = access_token())\r\n\r\n    })\r\n\r\n    output$meta_file <- renderText({\r\n      validate(\r\n        need(meta(), \"Upload file\")\r\n      )\r\n\r\n      str(meta())\r\n\r\n      paste(\"Uploaded: \", meta()$name)\r\n\r\n    })\r\n\r\n  })\r\n)\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}